@using BlazorColorPicker

<div class="color-info__wrapper">


    <div class="@cssBasicView">

        <button class="color-info__button-add" title="add color to scheme">
            <img src="/assets/add-icon.svg" alt="" />
        </button>

        <button class="@cssColorViewer" style="@styleSampleColor" title="choose different color" @onclick="ShowColorPicker">
            <div class="color-info__color-change">...</div>
        </button>

        <InputHex @bind-Value="ColorHex" IsLabelHidden="@(!isFullView)" IsBold="@isFullView" />

        <button class="@cssButtonDetalis" @onclick="ChangeView" title="show/hide color details">
            <img src="/assets/dropdown-icon.svg" />
        </button>

    </div>

    @if (isFullView)
    {
        <div class="color-info__full-view">

            <button class="color-info__color-big-sample" style="@styleSampleColor" title="choose different color" @onclick="ShowColorPicker">
                <div class="color-info__color-change">...</div>
            </button>

            <InputRGB @bind-Value="ColorHex" />
            <InputHSL @bind-Value="ColorHex" />
            <InputName @bind-Value="ColorHex" />

        </div>

        <ColorBar ColorHex="@ColorHex" ColorBarType="@EnumColorBarType.Lightness" />
        <ColorBar ColorHex="@ColorHex" ColorBarType="@EnumColorBarType.Saturation" />
        <ColorBar ColorHex="@ColorHex" ColorBarType="@EnumColorBarType.Hue" />

        <div class="color-info__color-fit">

            <ColorFitText TextColor="@ColorHex" BackgroundColor="#000000" />
            <ColorFitText TextColor="@ColorHex" BackgroundColor="#ffffff" />
            <ColorFitText TextColor="#000000" BackgroundColor="@ColorHex" />
            <ColorFitText TextColor="#ffffff" BackgroundColor="@ColorHex" />
            <ColorFitBorder BorderColor="@ColorHex" BackgroundColor="#000000" />
            <ColorFitBorder BorderColor="@ColorHex" BackgroundColor="#ffffff" />

        </div>
    }

    <ColorPicker Title="Choose color" IsOpened="isColorPickerOpened" Closed="ClosedColorPicker" MyColor="@ColorHex">
    </ColorPicker>

</div>

@code {
    [Parameter]
    public string ColorHex { get; set; }

    private bool isFullView = false;

    private string cssBasicView => isFullView ? "color-info__basic-view color-info__basic-view--full" : "color-info__basic-view";
    private string cssColorViewer => isFullView ? "color-info__color-sample color-info__color-sample--hidden" : "color-info__color-sample";
    private string cssButtonDetalis => isFullView ? "color-info__switch-view color-info__switch-view--full" : "color-info__switch-view";
    private string styleSampleColor => $"background-color: {ColorHex};";

    private void ChangeView() => isFullView = !isFullView;


    bool isColorPickerOpened = false;

    void ShowColorPicker()
    {
        isColorPickerOpened = true;
    }

    void ClosedColorPicker(string value)
    {
        ColorHex = value;
        isColorPickerOpened = false;
    }

}
