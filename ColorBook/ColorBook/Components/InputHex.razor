
<div class="@cssWrapper">

    <label class="@cssLabel">
        <span>Hex:</span>
        <input @bind="@Value" @bind:event="oninput" class="@cssInput" @onkeyup="SetValue" />
    </label>

    <ButtonCopy Text="@Value" />

</div>


@code {
    [Parameter]
    public string Value { get; set; }
    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }
    [Parameter]
    public bool IsBold { get; set; }
    [Parameter]
    public bool IsLabelHidden { get; set; }

    string cssWrapper => $"input-hex__wrapper {(IsLabelHidden ? " input-hex__wrapper--auto" : "")}";
    string cssLabel => $"input-hex__label {(IsLabelHidden ? " input-hex__label--hidden" : "")}";
    string cssInput => $"input-hex__input {(IsBold ? " input-hex__input--bold" : "")}";

    private async Task SetValue()
    {
        if (isHexColor(Value))
            await ValueChanged.InvokeAsync(Value);
    }

    private bool isHexColor(string value)
    {
        var pattern = "^#(?:[0-9a-fA-F]{3}){1,2}$";
        var regex = new System.Text.RegularExpressions.Regex(pattern);
        return regex.Match(value).Success;
    }
}
