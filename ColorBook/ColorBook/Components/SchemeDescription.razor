
<ul class="scheme-description__list">

    <li class="scheme-description__list-item">
        <label class="scheme-description__scheme-name">
            <span>Name:</span>
            <input type="text" class="scheme-description__input" @bind="Scheme.Name" @onfocus="()=>SelectIndex(null)" />
        </label>
    </li>

    @for (int i = 0; i < Scheme.Colors.Count; i++)
    {
        int index = i;
        <li class="scheme-description__list-item">
            <label class="@GetCssColorName(index)">
                <span>#@(i+1):</span>
                <input type="text" class="scheme-description__input" @bind="Scheme.Colors[index].Name" @onfocus="()=>SelectIndex(index)" />
            </label>
        </li>
    }
</ul>

@code {
    [Parameter]
    public ColorScheme Scheme { get; set; }
    [Parameter]
    public int? SelectedIndex { get; set; }
    [Parameter]
    public EventCallback<int?> SelectedIndexChanged { get; set; }


    async Task SelectIndex(int? index)
    {
        SelectedIndex = index;
        await SelectedIndexChanged.InvokeAsync(index);
    }

    string GetCssColorName(int index)
    {
        var css = "scheme-description__color-name";
        if (index == SelectedIndex)
            css += " scheme-description__color-name--selected";
        return css;
    }

}
