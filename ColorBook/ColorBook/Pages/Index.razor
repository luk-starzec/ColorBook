@page "/"
@inject IJSRuntime JS
@using System
@inject ISettingsService settingsService
@inject ISchemeService schemeService;

<SideBar CurrentScheme="colorScheme" OnSchemeLoad="SetScheme" />

<main class="main__wrapper">

    <ColorInfo @bind-ColorHex="ColorHex" />

    <SchemeInfo @ref="schemeInfo" Scheme="colorScheme" @bind-SelectedColor="ColorHex" />

</main>

@code {
    SchemeInfo schemeInfo;
    ColorScheme colorScheme;

    string ColorHex { get; set; }



    protected override async Task OnInitializedAsync()
    {
        colorScheme = GetColorScheme();
    }


    void SetScheme(ColorScheme scheme)
    {
        ColorHex = null;
        colorScheme = scheme;
    }

    void AddColor(string colorHex)
    {
        colorScheme.AddColor(colorHex);
    }


    private ColorScheme GetColorScheme()
    {
        return new ColorScheme
        {
            Id = Guid.NewGuid(),
            Name = string.Empty,
            Colors = new List<NamedColor>
{
                new NamedColor("#123456"),
                new NamedColor("#4DEA26"),
                new NamedColor("#AABBCC"),
                new NamedColor("#DDEEFF"),
                new NamedColor("#998877")
            }
        };
    }
}