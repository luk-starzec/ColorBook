@page "/"
@inject IJSRuntime JS

<h1>Hello, world!</h1>
<h2>@colorHex</h2>

<InputHex @bind-Value="colorHex" />
<InputRGB @bind-Value="colorHex" />
<InputHSL @bind-Value="colorHex" />


<ColorInfo ColorHex="@colorHex" />

<ColorFitText TextColor="@colorHex" BackgroundColor="#000000" />
<ColorFitText TextColor="@colorHex" BackgroundColor="#ffffff" />
<ColorFitText TextColor="#000000" BackgroundColor="@colorHex" />
<ColorFitText TextColor="#ffffff" BackgroundColor="@colorHex" />

<ColorFitBorder BorderColor="@colorHex" BackgroundColor="#000000" />
<ColorFitBorder BorderColor="@colorHex" BackgroundColor="#ffffff" />

<ColorBar ColorHex="@colorHex" ColorBarType="@EnumColorBarType.Lightness" />
<ColorBar ColorHex="@colorHex" ColorBarType="@EnumColorBarType.Saturation" />
<ColorBar ColorHex="@colorHex" ColorBarType="@EnumColorBarType.Hue" />

@*<ColorInfoFull ColorHex="@colorHex" />*@

<button @onclick="Test">Test</button>

@code {
    string colorHex { get; set; } = "#ff00ff";

    async Task Test()
    {
        Console.WriteLine("test");
        //var x = await JS.InvokeAsync<string>("ColorLib.colorTest");
    }


    //protected override void OnInitialized()
    //{
    //    Console.WriteLine("111");
    //    base.OnInitialized();
    //}

    //protected override void OnParametersSet()
    //{
    //    Console.WriteLine("222");
    //    base.OnParametersSet();
    //}

    //protected override void OnAfterRender(bool firstRender)
    //{
    //    Console.WriteLine("333");
    //    base.OnAfterRender(firstRender);
    //}

    //protected override Task OnParametersSetAsync()
    //{
    //    return base.OnParametersSetAsync();
    //}

    //protected override Task OnAfterRenderAsync(bool firstRender)
    //{
    //    return base.OnAfterRenderAsync(firstRender);
    //}

    //protected override Task OnInitializedAsync()
    //{
    //    return base.OnInitializedAsync();
    //}

}